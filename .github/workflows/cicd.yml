# name: CI/CD Pipeline (Staging)
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
# jobs:
# #   test:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v2
# #       - name: Use Node.js
# #         uses: actions/setup-node@v2
# #         with:
# #           node-version: '20.x'
# #       - run: npm ci
# #       - run: npm run test

#   build-and-push:
#     # needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
     
#       - name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           push: true
#           tags: rahuldocker2/eventgreek:${{ github.sha }}

#   deploy-staging:
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install kubectl
#         uses: azure/setup-kubectl@v2
#       - name: Set Kubernetes context
#         uses: azure/k8s-set-context@v2
#         with:
#           kubeconfig: ${{ secrets.KUBE_CONFIG_STAGING }}
#       - name: Deploy to staging
#         run: |
#           sed -i 's|DOCKER_IMAGE|rahuldocker2/eventgreek:${{ github.sha }}|g' k8s/deployment.yaml
#           sed -i 's|DOMAIN_NAME|staging.bms.100xdevs.com|g' k8s/ingress.yaml
#           kubectl apply -f k8s/
